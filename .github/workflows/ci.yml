name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  CI: true
  dist: ember-headless-table/dist

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm




  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Lint
        run: pnpm lint



  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/assert-build


  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [build]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.5
          - typescript@4.6
          - typescript@4.7
          - typescript@4.8
          - typescript@4.9

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app
      - name: 'Type checking'

        run: |
          pnpm --filter test-app exec tsc -v;
          pnpm --filter test-app exec glint --version;
          pnpm --filter test-app exec glint;





  default_tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember

  floating_tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember


  try_scenarios:
    name: ${{ matrix.try-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [default_tests]

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28
          - ember-4.0
          - ember-lts-4.4
          - ember-lts-4.8
          - ember-lts-4.12
          - ember-5.0.0
          - ember-release
          - ember-beta
          - ember-canary
          - "'ember-release + embroider-safe'"
          - "'ember-release + embroider-optimized'"
          - "'ember-lts-3.28 + embroider-optimized'"
          - "'ember-lts-4.4 + embroider-optimized'"
          - "'ember-lts-4.8 + embroider-optimized'"

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Run Tests
        working-directory: ./test-app
        run: |
          if [[ "${{matrix.try-scenario}}" == "'ember-lts-4.8 + embroider-optimized'" ]]; then
            echo 'Running custom try scenario due to peer deps resolving incorrectly (due to installation issues)'
            pnpm add --save-dev ember-source@~4.8.0
            pnpm add --save-dev @embroider/core @embroider/webpack @embroider/compat
            pnpm ember test
          else
            node_modules/.bin/ember try:one ${{ matrix.try-scenario }} --skip-cleanup
          fi




  # https://github.com/changesets/action
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - default_tests
      - floating_tests
      - typecheck
      - try_scenarios

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}



  TypecheckDocs:
    name: Typecheck Docs
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm glint
        working-directory: docs-app



  PublishDocstoCloudflarePages:
    name: Publish Docs to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write
    outputs:
      url: ${{ steps.publishStep.outputs.url }}
      env: ${{ steps.publishStep.outputs.environment }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm build:docs
      - name: Publish to Cloudflare Pages
        id: publishStep
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.UX_OSS_CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.UX_OSS_CLOUDFLARE_ACCOUNT_ID }}
          projectName: ember-headless-table
          directory: ./docs-app/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}



  PostPreviewURLascommenttoPR:
    name: Post Preview URL as comment to PR
    runs-on: ubuntu-latest
    needs: PublishDocstoCloudflarePages
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |+
            ## Preview URLs
            GH Env: ${{ needs.PublishDocstoCloudflarePages.outputs.env }}
            docs: ${{ needs.PublishDocstoCloudflarePages.outputs.url }}
            api docs: ${{ needs.PublishDocstoCloudflarePages.outputs.url }}/api/modules.html



